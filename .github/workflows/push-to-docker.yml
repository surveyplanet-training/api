name: GitHub Actions Push to DockerHub
on:
  push:
    branches:
      - ${GITHUB_REF#refs/heads/}
jobs:
  semVer:
    name: Semantic Version
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Code
        id: git_checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Semantic Version
        id: semVer
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: 'v'
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: '(MAJOR)'
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: '(MINOR)'
          # A string to determine the format of the version output
          format: '${major}.${minor}.${patch}-prerelease${increment}'
          # # Optional path to check for changes. If any changes are detected in the path the
          # # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          namespace: menu-api
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
    outputs:
      version: '${{ steps.semVer.outputs.version }}'
  build:
    name: Build and push to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Code
        id: git_checkout
        uses: actions/checkout@v2

      - name: Build Docker Image
        id: buildAndPushImage
        uses: Abhishek-070/Dockerhub-Build-Push@v1.0
        with:
          registry_url: 'docker.io'
          repository_name: 'lukamit/menu_api' #secrets.REPOSITORY_NAME
          user_name: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image_version: '${{ needs.jobs.semVer.outputs.version }}'
          docker_file: '.'
        env:
          MONGO: ${{ secrets.MONGO }}
          LOCAL_ENV: 'github'

      - name: Get pre step result output image_pull_url
        run: echo "The time was ${{ steps.buildAndPushImage.outputs.image_pull_url }}"

  update-infrastructure:
    name: Update infrastructure version to source version
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Infrastructure
        uses: actions/checkout@v2
        with:
          repository:
          path: ./Infrastructure

      - name: Edit Infrastructure Version
        run: echo "TODO"
