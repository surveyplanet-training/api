name: GitHub Actions Push to DockerHub
on:
  push:
    branches:
      - luka-dev
jobs:
  semVerJob:
    name: Semantic Version Job
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Code
        id: git_checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Semantic Version
        id: semVer
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: 'v'
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: '(MAJOR)'
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: '(MINOR)'
          # A string to determine the format of the version output
          format: '${major}.${minor}.${patch}-prerelease${increment}'
          # # Optional path to check for changes. If any changes are detected in the path the
          # # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          namespace: menu-api
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
      - name: echo semver
        run: echo '${{ steps.semVer.outputs.version }}'
    outputs:
      version: '${{ steps.semVer.outputs.version }}'
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: echo semver
  #       run: echo '${{ needs.jobs.semVerJob.outputs.version }}'
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: true
  #         tags:
  #           lukamit/menu-api-development:1.0.0 # |
  #           # lukamit/menu-api-development
  #           # 'version: ${{ needs.jobs.semVer.outputs.version }}'
  #         target: development
  #         secrets: |
  #           "MONGO=${{ secrets.MONGO }}"
  #           "LOCAL_ENV= github"
  # update-infrastructure:
  #   name: Update infrastructure version to source version
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout Infrastructure
  #       uses: actions/checkout@v2
  #       with:
  #         repository:
  #         path: ./Infrastructure

  #     - name: Edit Infrastructure Version
  #       run: echo "TODO"
